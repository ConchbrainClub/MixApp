@page "/"
@inherits MixApp.Pages.IndexBase
@using MixApp.Models

<BaseLayerLuminance>
    <FluentHorizontalScroll class="banner animate__animated animate__fadeInRight" Speed="2000"
        Easing=ScrollEasing.EaseInOut>
            @if (RecentlyUpdatedSoftwares.Count == 0)
            {
                for (int index = 0; index < 3; index++)
                {
                      <FluentCard class="bannerSkeleton" Shimmer="true">
                        <FluentSkeleton class="bannerSkeletonTitle"  Shape="SkeletonShape.Rect" Shimmer="true"></FluentSkeleton>
                        <FluentSkeleton class="bannerSkeletonIntro" Shape="SkeletonShape.Rect"  Shimmer="true"></FluentSkeleton>

                        <FluentSkeleton class="bannerSkeletonButton" Shape="SkeletonShape.Rect"  Shimmer="true"></FluentSkeleton>
                    </FluentCard> 
                }
            }
            else
            {
                 @foreach (Software software in RecentlyUpdatedSoftwares)
                {
                    <FluentCard @onclick=@(_ => GlobalEvent.OpenSoftware(software)) Appearance="Appearance.Accent">
                        <div class="bannerDesc">
                            <h2>@software.PackageName</h2>
                            <p>@software.ShortDescription</p>
                            <FluentButton Appearance="Appearance.Outline">
                                More Info
                            </FluentButton>
                        </div>
                        <img src=@(HttpClient?.BaseAddress + software.Cover) class="cover" loading="lazy">
                        <div class="mask" />
                    </FluentCard>
                }
            }

       
        
    </FluentHorizontalScroll>

    <div class="recommended">
        <p class="text">
            Recommend for you &gt;
        </p>
    </div>

    <div class="content">
        @if (RandomSoftwares.Count == 0)
        {
            for (int index = 0; index < 10; index++)
            {
                <FluentCard class="skeleton" Shimmer="true">
                    <div class="skeletonBox"></div>
                    <FluentSkeleton class="packageSkeleton"  Shimmer="true"></FluentSkeleton>
                    
                    <FluentDivider></FluentDivider>
                    <FluentSkeleton class="titleSkeleton" Shape="SkeletonShape.Rect"  Shimmer="true"></FluentSkeleton>
                    <FluentSkeleton class="iconSkeleton" style="border-radius: 4px; width: 50px; height: 50px;width: 50px;float: right;" Shape="SkeletonShape.Circle"  Shimmer="true"></FluentSkeleton>
                    
                    <FluentSkeleton class="firmSkeleton" Shape="SkeletonShape.Rect"  Shimmer="true"></FluentSkeleton>
                    <FluentSkeleton class="introSkeleton"  Shimmer="true"></FluentSkeleton>
                    <FluentSkeleton class="introSkeleton"  Shimmer="true"></FluentSkeleton>
                    <FluentSkeleton class="introSkeleton"  Shimmer="true"></FluentSkeleton>
                    <FluentSkeleton class="buttonSkeleton starSkeleton" Shape="SkeletonShape.Rect"  Shimmer="true"></FluentSkeleton>
                    <FluentSkeleton class="buttonSkeleton moreSkeleton" Shape="SkeletonShape.Rect"  Shimmer="true"></FluentSkeleton>
                </FluentCard> 
            }
        }
        else
        {
            @foreach (Software software in RandomSoftwares)
            {
                <SoftwareCard Software="software" />
            }
        }
    </div>

    <div class="recommended">
        <p class="text">
            Trending software &gt;
        </p>
    </div>

    <div class="content">
        @if (RecentlyUpdatedSoftwares.Count == 0)
        {
            for (int index = 0; index <10; index++)
            {
                <FluentCard class="skeleton" Shimmer="true">
                    <div class="skeletonBox"></div>
                    <FluentSkeleton class="packageSkeleton"  Shimmer="true"></FluentSkeleton>
                    
                    <FluentDivider></FluentDivider>
                    <FluentSkeleton class="titleSkeleton" Shape="SkeletonShape.Rect"  Shimmer="true"></FluentSkeleton>
                    <FluentSkeleton class="iconSkeleton" style="border-radius: 4px; width: 50px; height: 50px;width: 50px;float: right;" Shape="SkeletonShape.Circle"  Shimmer="true"></FluentSkeleton>
                    
                    <FluentSkeleton class="firmSkeleton" Shape="SkeletonShape.Rect"  Shimmer="true"></FluentSkeleton>
                    <FluentSkeleton class="introSkeleton"  Shimmer="true"></FluentSkeleton>
                    <FluentSkeleton class="introSkeleton"  Shimmer="true"></FluentSkeleton>
                    <FluentSkeleton class="introSkeleton"  Shimmer="true"></FluentSkeleton>
                    <FluentSkeleton class="buttonSkeleton starSkeleton" Shape="SkeletonShape.Rect"  Shimmer="true"></FluentSkeleton>
                    <FluentSkeleton class="buttonSkeleton moreSkeleton" Shape="SkeletonShape.Rect"  Shimmer="true"></FluentSkeleton>
                </FluentCard> 
            }
        }
        else
        {
            @foreach (Software software in RecentlyUpdatedSoftwares)
            {
                <SoftwareCard Software="software" />
            }
        }
    </div>
</BaseLayerLuminance>

<style>
    .skeleton{
        height: 300px;
        position: relative;
        padding: 20px 20px 60px 20px;
        border: 0.8px solid #000;
        box-sizing: border-box;
    }
    .skeleton .packageSkeleton{
        border-radius: 7px;
        height: 20px;
        margin-bottom: 16px;
    }
    .skeleton .titleSkeleton{
        float: left;
        width: 60%;
        height: 32px;
        margin: 0.75rem 0;
    }
    .skeleton .iconSkeleton{
        float: right;
        width: 40px;
        height: 40px;
        border-radius: 5px;
        margin: 10px;
    }
    .skeleton .firmSkeleton{
        width: 90%;
        height: 20px;
        margin-bottom: 10px;
    }
    .skeleton .introSkeleton{
        width: 100%;
        height: 13px;
        margin: 5px 0 6px 0;
    }
    .skeleton .buttonSkeleton{
        height: 32px;
        float: left;
        position: absolute;
        bottom: 30px;
    }
    .skeleton .moreSkeleton{
        left: 105px;
        width: 82px;
    }
    .skeleton .starSkeleton{
        left: 20px;
        width: 72px;
    }
    .skeletonBox{
        width: 5000px;
    }
    .bannerSkeleton{
        margin-right: 10px;
        height: 550px;
        width: 950px;
        position: relative;
    }
    .bannerSkeletonTitle{
        position: absolute;
        top: 45%;
        left: 6%;
        height: 36px;
        width: 200px;
        margin-bottom: 12px;
    }
    .bannerSkeletonIntro{
        position: absolute;
        top: 54%;
        left: 6%;
        height: 20px;
        width: 250px;
        margin-bottom: 16px;
    }
    .bannerSkeletonButton{
        position: absolute;
        top: 60%;
        left: 6%;
        width: 82px;
        height: 32px;
    }

    .banner {
        width: 100%;
    }

    .text {
        font-weight: bold;
        font-size: 17px;
        font-family: inherit;
    }

    .banner fluent-card {
        margin-right: 10px;
        height: 550px;
        width: 950px;
        position: relative;
    }

    .banner fluent-card:hover {
        -webkit-box-shadow: 0 0 6px #999;
        box-shadow: 0 0 6px #999;
        -webkit-transition: all .5s ease-out;
        transition: all .5s ease-out;
    }

    .banner .cover {
        height: 100%;
    }

    .banner .mask {
        width: 100%;
        height: 100%;
        position: absolute;
        top: 0%;
        left: 0%;
        z-index: 3;
        background: linear-gradient(to right, rgba(0, 0, 0, .6), rgba(255, 255, 255, 0));
    }

    .bannerDesc {
        font-size: 20px;
        font-weight: bold;
        max-width: 400px;
        position: absolute;
        top: 45%;
        left: 6%;
        z-index: 4;
    }

    .bannerDesc fluent-button {
        backdrop-filter: saturate(110%) blur(10px);
    }

    .content {
        display: grid;
        grid-template-columns: repeat(5, minmax(0, 1fr));
        grid-gap: 1em;
    }

    @@media only screen and (max-width: 1400px) {
        .content {
            grid-template-columns: repeat(4, minmax(0, 1fr));
        }
    }

    @@media only screen and (max-width: 1200px) {
        .content {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }
    }

    @@media only screen and (max-width: 950px) {
        .content {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }
    }

    @@media only screen and (max-width: 700px) {
        .content {
            width: 100%;
            grid-template-columns: repeat(1, minmax(0, 1fr));
        }
    }

    .recommended {
        width: 100%;
        margin-top: 20px;
        text-align: left;
    }
</style>