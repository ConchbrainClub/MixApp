@page "/fetchdata"
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <FluentDataGrid Items="@forecasts" style="width: 50%;">
        <PropertyColumn Property="@(i => i.TemperatureC)" Sortable="true" />
        <PropertyColumn Property="@(i => i.TemperatureF)" Sortable="true" />
        <PropertyColumn Property="@(i => i.Summary)" Sortable="true" />
        <PropertyColumn Property="@(i => i.Date)" Format="yyyy-MM-dd" Sortable="true" />
    </FluentDataGrid>
}

@code {
    private IQueryable<WeatherForecast>? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = (await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json"))?.AsQueryable();
    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
